@using BlazorEasyAuth.Models
@using BlazorEasyAuth.Example.Models
<div class="top-row pl-4 navbar navbar-dark">
	<a class="navbar-brand" href="">BlazorEasyAuth.Example</a>
	<button class="navbar-toggler" @onclick="ToggleNavMenu">
		<span class="navbar-toggler-icon"></span>
	</button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
	<ul class="nav flex-column">
		<li class="nav-item px-3">
			<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
				<span class="oi oi-home" aria-hidden="true"></span> Home
			</NavLink>
		</li>
		<li class="nav-item px-3">
			<NavLink class="nav-link" href="/authorizedPage" Match="NavLinkMatch.All">
				<span class="oi oi-lock-locked" aria-hidden="true"></span> Authorized page (unchecked)
			</NavLink>
		</li>
		<AuthorizeView>
			<li class="nav-item px-3">
				<NavLink class="nav-link" href="/authorizedPage" Match="NavLinkMatch.All">
					<span class="oi oi-lock-locked" aria-hidden="true"></span> Authorized page (checked)
				</NavLink>
			</li>
		</AuthorizeView>
		<AuthorizeView Policy="@Policies.MyResource1.View">
			<li class="nav-item px-3">
				<NavLink class="nav-link" href="/resource1" Match="NavLinkMatch.All">
					<span class="oi oi-lock-locked" aria-hidden="true"></span> Resource 1
				</NavLink>
			</li>
		</AuthorizeView>
		<AuthorizeView Policy="@Policies.MyResource2.View">
			<li class="nav-item px-3">
				<NavLink class="nav-link" href="/resource2" Match="NavLinkMatch.All">
					<span class="oi oi-lock-locked" aria-hidden="true"></span> Resource 2
				</NavLink>
			</li>
		</AuthorizeView>
	</ul>
</div>

@code {
	private bool _collapseNavMenu = true;

	private string NavMenuCssClass => _collapseNavMenu ? "collapse" : null;

	private void ToggleNavMenu()
	{
		_collapseNavMenu = !_collapseNavMenu;
	}

}